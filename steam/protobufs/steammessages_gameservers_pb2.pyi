# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from abc import (
    ABCMeta as abc___ABCMeta,
    abstractmethod as abc___abstractmethod,
)

from concurrent.futures import (
    Future as concurrent___futures___Future,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.service import (
    RpcChannel as google___protobuf___service___RpcChannel,
    RpcController as google___protobuf___service___RpcController,
    Service as google___protobuf___service___Service,
)

from typing import (
    Callable as typing___Callable,
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class CGameServers_GetServerList_Request(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    filter: typing___Text = ...
    limit: builtin___int = ...

    def __init__(self,
        *,
        filter : typing___Optional[typing___Text] = None,
        limit : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"filter",b"filter",u"limit",b"limit"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"filter",b"filter",u"limit",b"limit"]) -> None: ...
type___CGameServers_GetServerList_Request = CGameServers_GetServerList_Request

class CGameServers_GetServerList_Response(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Server(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        addr: typing___Text = ...
        gameport: builtin___int = ...
        specport: builtin___int = ...
        steamid: builtin___int = ...
        name: typing___Text = ...
        appid: builtin___int = ...
        gamedir: typing___Text = ...
        version: typing___Text = ...
        product: typing___Text = ...
        region: builtin___int = ...
        players: builtin___int = ...
        max_players: builtin___int = ...
        bots: builtin___int = ...
        map: typing___Text = ...
        secure: builtin___bool = ...
        dedicated: builtin___bool = ...
        os: typing___Text = ...
        gametype: typing___Text = ...

        def __init__(self,
            *,
            addr : typing___Optional[typing___Text] = None,
            gameport : typing___Optional[builtin___int] = None,
            specport : typing___Optional[builtin___int] = None,
            steamid : typing___Optional[builtin___int] = None,
            name : typing___Optional[typing___Text] = None,
            appid : typing___Optional[builtin___int] = None,
            gamedir : typing___Optional[typing___Text] = None,
            version : typing___Optional[typing___Text] = None,
            product : typing___Optional[typing___Text] = None,
            region : typing___Optional[builtin___int] = None,
            players : typing___Optional[builtin___int] = None,
            max_players : typing___Optional[builtin___int] = None,
            bots : typing___Optional[builtin___int] = None,
            map : typing___Optional[typing___Text] = None,
            secure : typing___Optional[builtin___bool] = None,
            dedicated : typing___Optional[builtin___bool] = None,
            os : typing___Optional[typing___Text] = None,
            gametype : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"addr",b"addr",u"appid",b"appid",u"bots",b"bots",u"dedicated",b"dedicated",u"gamedir",b"gamedir",u"gameport",b"gameport",u"gametype",b"gametype",u"map",b"map",u"max_players",b"max_players",u"name",b"name",u"os",b"os",u"players",b"players",u"product",b"product",u"region",b"region",u"secure",b"secure",u"specport",b"specport",u"steamid",b"steamid",u"version",b"version"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"addr",b"addr",u"appid",b"appid",u"bots",b"bots",u"dedicated",b"dedicated",u"gamedir",b"gamedir",u"gameport",b"gameport",u"gametype",b"gametype",u"map",b"map",u"max_players",b"max_players",u"name",b"name",u"os",b"os",u"players",b"players",u"product",b"product",u"region",b"region",u"secure",b"secure",u"specport",b"specport",u"steamid",b"steamid",u"version",b"version"]) -> None: ...
    type___Server = Server


    @property
    def servers(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___CGameServers_GetServerList_Response.Server]: ...

    def __init__(self,
        *,
        servers : typing___Optional[typing___Iterable[type___CGameServers_GetServerList_Response.Server]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"servers",b"servers"]) -> None: ...
type___CGameServers_GetServerList_Response = CGameServers_GetServerList_Response

class CGameServers_GetServerSteamIDsByIP_Request(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    server_ips: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    def __init__(self,
        *,
        server_ips : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"server_ips",b"server_ips"]) -> None: ...
type___CGameServers_GetServerSteamIDsByIP_Request = CGameServers_GetServerSteamIDsByIP_Request

class CGameServers_IPsWithSteamIDs_Response(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Server(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        addr: typing___Text = ...
        steamid: builtin___int = ...

        def __init__(self,
            *,
            addr : typing___Optional[typing___Text] = None,
            steamid : typing___Optional[builtin___int] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"addr",b"addr",u"steamid",b"steamid"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"addr",b"addr",u"steamid",b"steamid"]) -> None: ...
    type___Server = Server


    @property
    def servers(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___CGameServers_IPsWithSteamIDs_Response.Server]: ...

    def __init__(self,
        *,
        servers : typing___Optional[typing___Iterable[type___CGameServers_IPsWithSteamIDs_Response.Server]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"servers",b"servers"]) -> None: ...
type___CGameServers_IPsWithSteamIDs_Response = CGameServers_IPsWithSteamIDs_Response

class CGameServers_GetServerIPsBySteamID_Request(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    server_steamids: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___int] = ...

    def __init__(self,
        *,
        server_steamids : typing___Optional[typing___Iterable[builtin___int]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"server_steamids",b"server_steamids"]) -> None: ...
type___CGameServers_GetServerIPsBySteamID_Request = CGameServers_GetServerIPsBySteamID_Request

class GameServers(google___protobuf___service___Service, metaclass=abc___ABCMeta):
    @abc___abstractmethod
    def GetServerList(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CGameServers_GetServerList_Request,
        done: typing___Optional[typing___Callable[[type___CGameServers_GetServerList_Response], None]],
    ) -> concurrent___futures___Future[type___CGameServers_GetServerList_Response]: ...
    @abc___abstractmethod
    def GetServerSteamIDsByIP(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CGameServers_GetServerSteamIDsByIP_Request,
        done: typing___Optional[typing___Callable[[type___CGameServers_IPsWithSteamIDs_Response], None]],
    ) -> concurrent___futures___Future[type___CGameServers_IPsWithSteamIDs_Response]: ...
    @abc___abstractmethod
    def GetServerIPsBySteamID(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CGameServers_GetServerIPsBySteamID_Request,
        done: typing___Optional[typing___Callable[[type___CGameServers_IPsWithSteamIDs_Response], None]],
    ) -> concurrent___futures___Future[type___CGameServers_IPsWithSteamIDs_Response]: ...
class GameServers_Stub(GameServers):
    def __init__(self, rpc_channel: google___protobuf___service___RpcChannel) -> None: ...
    def GetServerList(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CGameServers_GetServerList_Request,
        done: typing___Optional[typing___Callable[[type___CGameServers_GetServerList_Response], None]],
    ) -> concurrent___futures___Future[type___CGameServers_GetServerList_Response]: ...
    def GetServerSteamIDsByIP(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CGameServers_GetServerSteamIDsByIP_Request,
        done: typing___Optional[typing___Callable[[type___CGameServers_IPsWithSteamIDs_Response], None]],
    ) -> concurrent___futures___Future[type___CGameServers_IPsWithSteamIDs_Response]: ...
    def GetServerIPsBySteamID(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CGameServers_GetServerIPsBySteamID_Request,
        done: typing___Optional[typing___Callable[[type___CGameServers_IPsWithSteamIDs_Response], None]],
    ) -> concurrent___futures___Future[type___CGameServers_IPsWithSteamIDs_Response]: ...