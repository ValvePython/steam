# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: steammessages_site_license.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import service as _service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import steam.protobufs.steammessages_unified_base_pb2 as steammessages__unified__base__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='steammessages_site_license.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n steammessages_site_license.proto\x1a steammessages_unified_base.proto\"\x8d\x01\n)CSiteManagerClient_IncomingClient_Request\x12\x17\n\x0fsite_instanceid\x18\x01 \x01(\x06\x12\x16\n\x0e\x63lient_steamid\x18\x02 \x01(\x06\x12\x17\n\x0f\x63lient_local_ip\x18\x03 \x01(\x07\x12\x16\n\x0e\x63onnection_key\x18\x04 \x01(\x0c\",\n*CSiteManagerClient_IncomingClient_Response\"N\n,CSiteLicense_ClientSeatCheckout_Notification\x12\r\n\x05\x61ppid\x18\x01 \x01(\r\x12\x0f\n\x07\x65result\x18\x02 \x01(\r\"r\n(CSiteLicense_InitiateAssociation_Request\x12\x14\n\x0csite_steamid\x18\x01 \x01(\x06\x12\x17\n\x0fsite_instanceid\x18\x02 \x01(\x06\x12\x17\n\x0f\x63lient_local_ip\x18\x03 \x01(\x07\"C\n)CSiteLicense_InitiateAssociation_Response\x12\x16\n\x0e\x63onnection_key\x18\x01 \x01(\x0c\":\n$CSiteLicense_LCSAuthenticate_Request\x12\x12\n\ninstanceid\x18\x01 \x01(\x06\"z\n%CSiteLicense_LCSAuthenticate_Response\x12\x0f\n\x07site_id\x18\x01 \x01(\x04\x12\x11\n\tsite_name\x18\x02 \x01(\t\x12\x13\n\x0bnew_session\x18\x03 \x01(\x08\x12\x18\n\x10no_site_licenses\x18\x04 \x01(\x08\"t\n%CSiteLicense_LCSAssociateUser_Request\x12\x0f\n\x07steamid\x18\x01 \x01(\x06\x12\x10\n\x08local_ip\x18\x02 \x01(\x07\x12\x12\n\ninstanceid\x18\x03 \x01(\x06\x12\x14\n\x0cmachine_name\x18\x04 \x01(\t\"(\n&CSiteLicense_LCSAssociateUser_Response\"]\n\'CSiteLicense_ClientSeatCheckout_Request\x12\x0f\n\x07steamid\x18\x01 \x01(\x06\x12\x12\n\ninstanceid\x18\x02 \x01(\x06\x12\r\n\x05\x61ppid\x18\x03 \x01(\r\"*\n(CSiteLicense_ClientSeatCheckout_Response\"b\n,CSiteLicense_ClientGetAvailableSeats_Request\x12\x0f\n\x07steamid\x18\x01 \x01(\x06\x12\x12\n\ninstanceid\x18\x02 \x01(\x06\x12\r\n\x05\x61ppid\x18\x03 \x01(\r\"H\n-CSiteLicense_ClientGetAvailableSeats_Response\x12\x17\n\x0f\x61vailable_seats\x18\x01 \x01(\r2\x86\x03\n\x11SiteManagerClient\x12\xaf\x01\n\x0eIncomingClient\x12*.CSiteManagerClient_IncomingClient_Request\x1a+.CSiteManagerClient_IncomingClient_Response\"D\x82\xb5\x18@Rack informing site manager of new inbound client PSK connection\x12\x93\x01\n\x1e\x43lientSeatCheckoutNotification\x12-.CSiteLicense_ClientSeatCheckout_Notification\x1a\x0b.NoResponse\"5\x82\xb5\x18\x31Notify client directly about seat checkout result\x1a)\x82\xb5\x18!Local site manager client service\xc0\xb5\x18\x02\x32\xd5\x06\n\x0bSiteLicense\x12\xa4\x01\n\x13InitiateAssociation\x12).CSiteLicense_InitiateAssociation_Request\x1a*.CSiteLicense_InitiateAssociation_Response\"6\x82\xb5\x18\x32\x43lient is requesting connetion info for local site\x12\x86\x01\n\x0fLCSAuthenticate\x12%.CSiteLicense_LCSAuthenticate_Request\x1a&.CSiteLicense_LCSAuthenticate_Response\"$\x82\xb5\x18 Local cafe server authentication\x12\x9d\x01\n\x10LCSAssociateUser\x12&.CSiteLicense_LCSAssociateUser_Request\x1a\'.CSiteLicense_LCSAssociateUser_Response\"8\x82\xb5\x18\x34Local cafe server wants to grant user access to site\x12\x9e\x01\n\x12\x43lientSeatCheckout\x12(.CSiteLicense_ClientSeatCheckout_Request\x1a).CSiteLicense_ClientSeatCheckout_Response\"3\x82\xb5\x18/Client is requesting use of a site license seat\x12\xba\x01\n\x17\x43lientGetAvailableSeats\x12-.CSiteLicense_ClientGetAvailableSeats_Request\x1a..CSiteLicense_ClientGetAvailableSeats_Response\"@\x82\xb5\x18<Client is requesting the number of currently available seats\x1a\x18\x82\xb5\x18\x14Site License serviceB\x03\x90\x01\x01')
  ,
  dependencies=[steammessages__unified__base__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_CSITEMANAGERCLIENT_INCOMINGCLIENT_REQUEST = _descriptor.Descriptor(
  name='CSiteManagerClient_IncomingClient_Request',
  full_name='CSiteManagerClient_IncomingClient_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='site_instanceid', full_name='CSiteManagerClient_IncomingClient_Request.site_instanceid', index=0,
      number=1, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='client_steamid', full_name='CSiteManagerClient_IncomingClient_Request.client_steamid', index=1,
      number=2, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='client_local_ip', full_name='CSiteManagerClient_IncomingClient_Request.client_local_ip', index=2,
      number=3, type=7, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='connection_key', full_name='CSiteManagerClient_IncomingClient_Request.connection_key', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=212,
)


_CSITEMANAGERCLIENT_INCOMINGCLIENT_RESPONSE = _descriptor.Descriptor(
  name='CSiteManagerClient_IncomingClient_Response',
  full_name='CSiteManagerClient_IncomingClient_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=214,
  serialized_end=258,
)


_CSITELICENSE_CLIENTSEATCHECKOUT_NOTIFICATION = _descriptor.Descriptor(
  name='CSiteLicense_ClientSeatCheckout_Notification',
  full_name='CSiteLicense_ClientSeatCheckout_Notification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='appid', full_name='CSiteLicense_ClientSeatCheckout_Notification.appid', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='eresult', full_name='CSiteLicense_ClientSeatCheckout_Notification.eresult', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=260,
  serialized_end=338,
)


_CSITELICENSE_INITIATEASSOCIATION_REQUEST = _descriptor.Descriptor(
  name='CSiteLicense_InitiateAssociation_Request',
  full_name='CSiteLicense_InitiateAssociation_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='site_steamid', full_name='CSiteLicense_InitiateAssociation_Request.site_steamid', index=0,
      number=1, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='site_instanceid', full_name='CSiteLicense_InitiateAssociation_Request.site_instanceid', index=1,
      number=2, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='client_local_ip', full_name='CSiteLicense_InitiateAssociation_Request.client_local_ip', index=2,
      number=3, type=7, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=340,
  serialized_end=454,
)


_CSITELICENSE_INITIATEASSOCIATION_RESPONSE = _descriptor.Descriptor(
  name='CSiteLicense_InitiateAssociation_Response',
  full_name='CSiteLicense_InitiateAssociation_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='connection_key', full_name='CSiteLicense_InitiateAssociation_Response.connection_key', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=456,
  serialized_end=523,
)


_CSITELICENSE_LCSAUTHENTICATE_REQUEST = _descriptor.Descriptor(
  name='CSiteLicense_LCSAuthenticate_Request',
  full_name='CSiteLicense_LCSAuthenticate_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='instanceid', full_name='CSiteLicense_LCSAuthenticate_Request.instanceid', index=0,
      number=1, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=525,
  serialized_end=583,
)


_CSITELICENSE_LCSAUTHENTICATE_RESPONSE = _descriptor.Descriptor(
  name='CSiteLicense_LCSAuthenticate_Response',
  full_name='CSiteLicense_LCSAuthenticate_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='site_id', full_name='CSiteLicense_LCSAuthenticate_Response.site_id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='site_name', full_name='CSiteLicense_LCSAuthenticate_Response.site_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='new_session', full_name='CSiteLicense_LCSAuthenticate_Response.new_session', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='no_site_licenses', full_name='CSiteLicense_LCSAuthenticate_Response.no_site_licenses', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=585,
  serialized_end=707,
)


_CSITELICENSE_LCSASSOCIATEUSER_REQUEST = _descriptor.Descriptor(
  name='CSiteLicense_LCSAssociateUser_Request',
  full_name='CSiteLicense_LCSAssociateUser_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='steamid', full_name='CSiteLicense_LCSAssociateUser_Request.steamid', index=0,
      number=1, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='local_ip', full_name='CSiteLicense_LCSAssociateUser_Request.local_ip', index=1,
      number=2, type=7, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instanceid', full_name='CSiteLicense_LCSAssociateUser_Request.instanceid', index=2,
      number=3, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='machine_name', full_name='CSiteLicense_LCSAssociateUser_Request.machine_name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=709,
  serialized_end=825,
)


_CSITELICENSE_LCSASSOCIATEUSER_RESPONSE = _descriptor.Descriptor(
  name='CSiteLicense_LCSAssociateUser_Response',
  full_name='CSiteLicense_LCSAssociateUser_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=827,
  serialized_end=867,
)


_CSITELICENSE_CLIENTSEATCHECKOUT_REQUEST = _descriptor.Descriptor(
  name='CSiteLicense_ClientSeatCheckout_Request',
  full_name='CSiteLicense_ClientSeatCheckout_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='steamid', full_name='CSiteLicense_ClientSeatCheckout_Request.steamid', index=0,
      number=1, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instanceid', full_name='CSiteLicense_ClientSeatCheckout_Request.instanceid', index=1,
      number=2, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='appid', full_name='CSiteLicense_ClientSeatCheckout_Request.appid', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=869,
  serialized_end=962,
)


_CSITELICENSE_CLIENTSEATCHECKOUT_RESPONSE = _descriptor.Descriptor(
  name='CSiteLicense_ClientSeatCheckout_Response',
  full_name='CSiteLicense_ClientSeatCheckout_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=964,
  serialized_end=1006,
)


_CSITELICENSE_CLIENTGETAVAILABLESEATS_REQUEST = _descriptor.Descriptor(
  name='CSiteLicense_ClientGetAvailableSeats_Request',
  full_name='CSiteLicense_ClientGetAvailableSeats_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='steamid', full_name='CSiteLicense_ClientGetAvailableSeats_Request.steamid', index=0,
      number=1, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='instanceid', full_name='CSiteLicense_ClientGetAvailableSeats_Request.instanceid', index=1,
      number=2, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='appid', full_name='CSiteLicense_ClientGetAvailableSeats_Request.appid', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1008,
  serialized_end=1106,
)


_CSITELICENSE_CLIENTGETAVAILABLESEATS_RESPONSE = _descriptor.Descriptor(
  name='CSiteLicense_ClientGetAvailableSeats_Response',
  full_name='CSiteLicense_ClientGetAvailableSeats_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='available_seats', full_name='CSiteLicense_ClientGetAvailableSeats_Response.available_seats', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1108,
  serialized_end=1180,
)

DESCRIPTOR.message_types_by_name['CSiteManagerClient_IncomingClient_Request'] = _CSITEMANAGERCLIENT_INCOMINGCLIENT_REQUEST
DESCRIPTOR.message_types_by_name['CSiteManagerClient_IncomingClient_Response'] = _CSITEMANAGERCLIENT_INCOMINGCLIENT_RESPONSE
DESCRIPTOR.message_types_by_name['CSiteLicense_ClientSeatCheckout_Notification'] = _CSITELICENSE_CLIENTSEATCHECKOUT_NOTIFICATION
DESCRIPTOR.message_types_by_name['CSiteLicense_InitiateAssociation_Request'] = _CSITELICENSE_INITIATEASSOCIATION_REQUEST
DESCRIPTOR.message_types_by_name['CSiteLicense_InitiateAssociation_Response'] = _CSITELICENSE_INITIATEASSOCIATION_RESPONSE
DESCRIPTOR.message_types_by_name['CSiteLicense_LCSAuthenticate_Request'] = _CSITELICENSE_LCSAUTHENTICATE_REQUEST
DESCRIPTOR.message_types_by_name['CSiteLicense_LCSAuthenticate_Response'] = _CSITELICENSE_LCSAUTHENTICATE_RESPONSE
DESCRIPTOR.message_types_by_name['CSiteLicense_LCSAssociateUser_Request'] = _CSITELICENSE_LCSASSOCIATEUSER_REQUEST
DESCRIPTOR.message_types_by_name['CSiteLicense_LCSAssociateUser_Response'] = _CSITELICENSE_LCSASSOCIATEUSER_RESPONSE
DESCRIPTOR.message_types_by_name['CSiteLicense_ClientSeatCheckout_Request'] = _CSITELICENSE_CLIENTSEATCHECKOUT_REQUEST
DESCRIPTOR.message_types_by_name['CSiteLicense_ClientSeatCheckout_Response'] = _CSITELICENSE_CLIENTSEATCHECKOUT_RESPONSE
DESCRIPTOR.message_types_by_name['CSiteLicense_ClientGetAvailableSeats_Request'] = _CSITELICENSE_CLIENTGETAVAILABLESEATS_REQUEST
DESCRIPTOR.message_types_by_name['CSiteLicense_ClientGetAvailableSeats_Response'] = _CSITELICENSE_CLIENTGETAVAILABLESEATS_RESPONSE

CSiteManagerClient_IncomingClient_Request = _reflection.GeneratedProtocolMessageType('CSiteManagerClient_IncomingClient_Request', (_message.Message,), dict(
  DESCRIPTOR = _CSITEMANAGERCLIENT_INCOMINGCLIENT_REQUEST,
  __module__ = 'steammessages_site_license_pb2'
  # @@protoc_insertion_point(class_scope:CSiteManagerClient_IncomingClient_Request)
  ))
_sym_db.RegisterMessage(CSiteManagerClient_IncomingClient_Request)

CSiteManagerClient_IncomingClient_Response = _reflection.GeneratedProtocolMessageType('CSiteManagerClient_IncomingClient_Response', (_message.Message,), dict(
  DESCRIPTOR = _CSITEMANAGERCLIENT_INCOMINGCLIENT_RESPONSE,
  __module__ = 'steammessages_site_license_pb2'
  # @@protoc_insertion_point(class_scope:CSiteManagerClient_IncomingClient_Response)
  ))
_sym_db.RegisterMessage(CSiteManagerClient_IncomingClient_Response)

CSiteLicense_ClientSeatCheckout_Notification = _reflection.GeneratedProtocolMessageType('CSiteLicense_ClientSeatCheckout_Notification', (_message.Message,), dict(
  DESCRIPTOR = _CSITELICENSE_CLIENTSEATCHECKOUT_NOTIFICATION,
  __module__ = 'steammessages_site_license_pb2'
  # @@protoc_insertion_point(class_scope:CSiteLicense_ClientSeatCheckout_Notification)
  ))
_sym_db.RegisterMessage(CSiteLicense_ClientSeatCheckout_Notification)

CSiteLicense_InitiateAssociation_Request = _reflection.GeneratedProtocolMessageType('CSiteLicense_InitiateAssociation_Request', (_message.Message,), dict(
  DESCRIPTOR = _CSITELICENSE_INITIATEASSOCIATION_REQUEST,
  __module__ = 'steammessages_site_license_pb2'
  # @@protoc_insertion_point(class_scope:CSiteLicense_InitiateAssociation_Request)
  ))
_sym_db.RegisterMessage(CSiteLicense_InitiateAssociation_Request)

CSiteLicense_InitiateAssociation_Response = _reflection.GeneratedProtocolMessageType('CSiteLicense_InitiateAssociation_Response', (_message.Message,), dict(
  DESCRIPTOR = _CSITELICENSE_INITIATEASSOCIATION_RESPONSE,
  __module__ = 'steammessages_site_license_pb2'
  # @@protoc_insertion_point(class_scope:CSiteLicense_InitiateAssociation_Response)
  ))
_sym_db.RegisterMessage(CSiteLicense_InitiateAssociation_Response)

CSiteLicense_LCSAuthenticate_Request = _reflection.GeneratedProtocolMessageType('CSiteLicense_LCSAuthenticate_Request', (_message.Message,), dict(
  DESCRIPTOR = _CSITELICENSE_LCSAUTHENTICATE_REQUEST,
  __module__ = 'steammessages_site_license_pb2'
  # @@protoc_insertion_point(class_scope:CSiteLicense_LCSAuthenticate_Request)
  ))
_sym_db.RegisterMessage(CSiteLicense_LCSAuthenticate_Request)

CSiteLicense_LCSAuthenticate_Response = _reflection.GeneratedProtocolMessageType('CSiteLicense_LCSAuthenticate_Response', (_message.Message,), dict(
  DESCRIPTOR = _CSITELICENSE_LCSAUTHENTICATE_RESPONSE,
  __module__ = 'steammessages_site_license_pb2'
  # @@protoc_insertion_point(class_scope:CSiteLicense_LCSAuthenticate_Response)
  ))
_sym_db.RegisterMessage(CSiteLicense_LCSAuthenticate_Response)

CSiteLicense_LCSAssociateUser_Request = _reflection.GeneratedProtocolMessageType('CSiteLicense_LCSAssociateUser_Request', (_message.Message,), dict(
  DESCRIPTOR = _CSITELICENSE_LCSASSOCIATEUSER_REQUEST,
  __module__ = 'steammessages_site_license_pb2'
  # @@protoc_insertion_point(class_scope:CSiteLicense_LCSAssociateUser_Request)
  ))
_sym_db.RegisterMessage(CSiteLicense_LCSAssociateUser_Request)

CSiteLicense_LCSAssociateUser_Response = _reflection.GeneratedProtocolMessageType('CSiteLicense_LCSAssociateUser_Response', (_message.Message,), dict(
  DESCRIPTOR = _CSITELICENSE_LCSASSOCIATEUSER_RESPONSE,
  __module__ = 'steammessages_site_license_pb2'
  # @@protoc_insertion_point(class_scope:CSiteLicense_LCSAssociateUser_Response)
  ))
_sym_db.RegisterMessage(CSiteLicense_LCSAssociateUser_Response)

CSiteLicense_ClientSeatCheckout_Request = _reflection.GeneratedProtocolMessageType('CSiteLicense_ClientSeatCheckout_Request', (_message.Message,), dict(
  DESCRIPTOR = _CSITELICENSE_CLIENTSEATCHECKOUT_REQUEST,
  __module__ = 'steammessages_site_license_pb2'
  # @@protoc_insertion_point(class_scope:CSiteLicense_ClientSeatCheckout_Request)
  ))
_sym_db.RegisterMessage(CSiteLicense_ClientSeatCheckout_Request)

CSiteLicense_ClientSeatCheckout_Response = _reflection.GeneratedProtocolMessageType('CSiteLicense_ClientSeatCheckout_Response', (_message.Message,), dict(
  DESCRIPTOR = _CSITELICENSE_CLIENTSEATCHECKOUT_RESPONSE,
  __module__ = 'steammessages_site_license_pb2'
  # @@protoc_insertion_point(class_scope:CSiteLicense_ClientSeatCheckout_Response)
  ))
_sym_db.RegisterMessage(CSiteLicense_ClientSeatCheckout_Response)

CSiteLicense_ClientGetAvailableSeats_Request = _reflection.GeneratedProtocolMessageType('CSiteLicense_ClientGetAvailableSeats_Request', (_message.Message,), dict(
  DESCRIPTOR = _CSITELICENSE_CLIENTGETAVAILABLESEATS_REQUEST,
  __module__ = 'steammessages_site_license_pb2'
  # @@protoc_insertion_point(class_scope:CSiteLicense_ClientGetAvailableSeats_Request)
  ))
_sym_db.RegisterMessage(CSiteLicense_ClientGetAvailableSeats_Request)

CSiteLicense_ClientGetAvailableSeats_Response = _reflection.GeneratedProtocolMessageType('CSiteLicense_ClientGetAvailableSeats_Response', (_message.Message,), dict(
  DESCRIPTOR = _CSITELICENSE_CLIENTGETAVAILABLESEATS_RESPONSE,
  __module__ = 'steammessages_site_license_pb2'
  # @@protoc_insertion_point(class_scope:CSiteLicense_ClientGetAvailableSeats_Response)
  ))
_sym_db.RegisterMessage(CSiteLicense_ClientGetAvailableSeats_Response)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\220\001\001'))

_SITEMANAGERCLIENT = _descriptor.ServiceDescriptor(
  name='SiteManagerClient',
  full_name='SiteManagerClient',
  file=DESCRIPTOR,
  index=0,
  options=_descriptor._ParseOptions(descriptor_pb2.ServiceOptions(), _b('\202\265\030!Local site manager client service\300\265\030\002')),
  serialized_start=1183,
  serialized_end=1573,
  methods=[
  _descriptor.MethodDescriptor(
    name='IncomingClient',
    full_name='SiteManagerClient.IncomingClient',
    index=0,
    containing_service=None,
    input_type=_CSITEMANAGERCLIENT_INCOMINGCLIENT_REQUEST,
    output_type=_CSITEMANAGERCLIENT_INCOMINGCLIENT_RESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\265\030@Rack informing site manager of new inbound client PSK connection')),
  ),
  _descriptor.MethodDescriptor(
    name='ClientSeatCheckoutNotification',
    full_name='SiteManagerClient.ClientSeatCheckoutNotification',
    index=1,
    containing_service=None,
    input_type=_CSITELICENSE_CLIENTSEATCHECKOUT_NOTIFICATION,
    output_type=steammessages__unified__base__pb2._NORESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\265\0301Notify client directly about seat checkout result')),
  ),
])

SiteManagerClient = service_reflection.GeneratedServiceType('SiteManagerClient', (_service.Service,), dict(
  DESCRIPTOR = _SITEMANAGERCLIENT,
  __module__ = 'steammessages_site_license_pb2'
  ))

SiteManagerClient_Stub = service_reflection.GeneratedServiceStubType('SiteManagerClient_Stub', (SiteManagerClient,), dict(
  DESCRIPTOR = _SITEMANAGERCLIENT,
  __module__ = 'steammessages_site_license_pb2'
  ))



_SITELICENSE = _descriptor.ServiceDescriptor(
  name='SiteLicense',
  full_name='SiteLicense',
  file=DESCRIPTOR,
  index=1,
  options=_descriptor._ParseOptions(descriptor_pb2.ServiceOptions(), _b('\202\265\030\024Site License service')),
  serialized_start=1576,
  serialized_end=2429,
  methods=[
  _descriptor.MethodDescriptor(
    name='InitiateAssociation',
    full_name='SiteLicense.InitiateAssociation',
    index=0,
    containing_service=None,
    input_type=_CSITELICENSE_INITIATEASSOCIATION_REQUEST,
    output_type=_CSITELICENSE_INITIATEASSOCIATION_RESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\265\0302Client is requesting connetion info for local site')),
  ),
  _descriptor.MethodDescriptor(
    name='LCSAuthenticate',
    full_name='SiteLicense.LCSAuthenticate',
    index=1,
    containing_service=None,
    input_type=_CSITELICENSE_LCSAUTHENTICATE_REQUEST,
    output_type=_CSITELICENSE_LCSAUTHENTICATE_RESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\265\030 Local cafe server authentication')),
  ),
  _descriptor.MethodDescriptor(
    name='LCSAssociateUser',
    full_name='SiteLicense.LCSAssociateUser',
    index=2,
    containing_service=None,
    input_type=_CSITELICENSE_LCSASSOCIATEUSER_REQUEST,
    output_type=_CSITELICENSE_LCSASSOCIATEUSER_RESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\265\0304Local cafe server wants to grant user access to site')),
  ),
  _descriptor.MethodDescriptor(
    name='ClientSeatCheckout',
    full_name='SiteLicense.ClientSeatCheckout',
    index=3,
    containing_service=None,
    input_type=_CSITELICENSE_CLIENTSEATCHECKOUT_REQUEST,
    output_type=_CSITELICENSE_CLIENTSEATCHECKOUT_RESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\265\030/Client is requesting use of a site license seat')),
  ),
  _descriptor.MethodDescriptor(
    name='ClientGetAvailableSeats',
    full_name='SiteLicense.ClientGetAvailableSeats',
    index=4,
    containing_service=None,
    input_type=_CSITELICENSE_CLIENTGETAVAILABLESEATS_REQUEST,
    output_type=_CSITELICENSE_CLIENTGETAVAILABLESEATS_RESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\265\030<Client is requesting the number of currently available seats')),
  ),
])

SiteLicense = service_reflection.GeneratedServiceType('SiteLicense', (_service.Service,), dict(
  DESCRIPTOR = _SITELICENSE,
  __module__ = 'steammessages_site_license_pb2'
  ))

SiteLicense_Stub = service_reflection.GeneratedServiceStubType('SiteLicense_Stub', (SiteLicense,), dict(
  DESCRIPTOR = _SITELICENSE,
  __module__ = 'steammessages_site_license_pb2'
  ))


# @@protoc_insertion_point(module_scope)
