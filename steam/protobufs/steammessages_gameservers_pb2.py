# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: steammessages_gameservers.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import service as _service
from google.protobuf import service_reflection
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import steam.protobufs.steammessages_base_pb2 as steammessages__base__pb2
import steam.protobufs.steammessages_unified_base_pb2 as steammessages__unified__base__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='steammessages_gameservers.proto',
  package='',
  syntax='proto2',
  serialized_options=b'\220\001\001',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1fsteammessages_gameservers.proto\x1a\x18steammessages_base.proto\x1a steammessages_unified_base.proto\"\x9f\x01\n\"CGameServers_GetServerList_Request\x12(\n\x06\x66ilter\x18\x01 \x01(\tB\x18\x82\xb5\x18\x14Query filter string.\x12O\n\x05limit\x18\x02 \x01(\r:\x03\x31\x30\x30\x42;\x82\xb5\x18\x37The maximum number of servers to return in the response\"\xe0\x03\n#CGameServers_GetServerList_Response\x12\x65\n\x07servers\x18\x01 \x03(\x0b\x32+.CGameServers_GetServerList_Response.ServerB\'\x82\xb5\x18#List of servers matching the filter\x1a\xd1\x02\n\x06Server\x12\x30\n\x04\x61\x64\x64r\x18\x01 \x01(\tB\"\x82\xb5\x18\x1eThe server\'s IP and query port\x12\x10\n\x08gameport\x18\x02 \x01(\r\x12\x10\n\x08specport\x18\x03 \x01(\r\x12\x0f\n\x07steamid\x18\x04 \x01(\x06\x12\x0c\n\x04name\x18\x05 \x01(\t\x12\r\n\x05\x61ppid\x18\x06 \x01(\r\x12\x0f\n\x07gamedir\x18\x07 \x01(\t\x12\x0f\n\x07version\x18\x08 \x01(\t\x12\x0f\n\x07product\x18\t \x01(\t\x12\x0e\n\x06region\x18\n \x01(\x05\x12\x0f\n\x07players\x18\x0b \x01(\x05\x12\x13\n\x0bmax_players\x18\x0c \x01(\x05\x12\x0c\n\x04\x62ots\x18\r \x01(\x05\x12\x0b\n\x03map\x18\x0e \x01(\t\x12\x0e\n\x06secure\x18\x0f \x01(\x08\x12\x11\n\tdedicated\x18\x10 \x01(\x08\x12\n\n\x02os\x18\x11 \x01(\t\x12\x10\n\x08gametype\x18\x12 \x01(\t\"@\n*CGameServers_GetServerSteamIDsByIP_Request\x12\x12\n\nserver_ips\x18\x01 \x03(\t\"\x90\x01\n%CGameServers_IPsWithSteamIDs_Response\x12>\n\x07servers\x18\x01 \x03(\x0b\x32-.CGameServers_IPsWithSteamIDs_Response.Server\x1a\'\n\x06Server\x12\x0c\n\x04\x61\x64\x64r\x18\x01 \x01(\t\x12\x0f\n\x07steamid\x18\x02 \x01(\x06\"E\n*CGameServers_GetServerIPsBySteamID_Request\x12\x17\n\x0fserver_steamids\x18\x01 \x03(\x06\"\x97\x03\n\"CGameServers_QueryByFakeIP_Request\x12/\n\x07\x66\x61ke_ip\x18\x01 \x01(\rB\x1e\x82\xb5\x18\x1a\x46\x61keIP of server to query.\x12\x34\n\tfake_port\x18\x02 \x01(\rB!\x82\xb5\x18\x1d\x46\x61ke port of server to query.\x12I\n\x06\x61pp_id\x18\x03 \x01(\rB9\x82\xb5\x18\x35\x41ppID to use.  Each AppID has its own FakeIP address.\x12j\n\nquery_type\x18\x04 \x01(\x0e\x32..CGameServers_QueryByFakeIP_Request.EQueryType:\rQuery_InvalidB\x17\x82\xb5\x18\x13What type of query?\"S\n\nEQueryType\x12\x11\n\rQuery_Invalid\x10\x00\x12\x0e\n\nQuery_Ping\x10\x01\x12\x11\n\rQuery_Players\x10\x02\x12\x0f\n\x0bQuery_Rules\x10\x03\"\xd0\x03\n\x1b\x43MsgGameServerPingQueryData\x12!\n\tserver_ip\x18\x01 \x01(\x0b\x32\x0e.CMsgIPAddress\x12\x12\n\nquery_port\x18\x02 \x01(\r\x12\x11\n\tgame_port\x18\x03 \x01(\r\x12\x16\n\x0espectator_port\x18\x04 \x01(\r\x12\x1d\n\x15spectator_server_name\x18\x05 \x01(\t\x12\x13\n\x0bserver_name\x18\x06 \x01(\t\x12\x0f\n\x07steamid\x18\x07 \x01(\x06\x12\x0e\n\x06\x61pp_id\x18\x08 \x01(\r\x12\x0f\n\x07gamedir\x18\t \x01(\t\x12\x0b\n\x03map\x18\n \x01(\t\x12\x18\n\x10game_description\x18\x0b \x01(\t\x12\x10\n\x08gametype\x18\x0c \x01(\t\x12\x13\n\x0bnum_players\x18\r \x01(\r\x12\x13\n\x0bmax_players\x18\x0e \x01(\r\x12\x10\n\x08num_bots\x18\x0f \x01(\r\x12\x10\n\x08password\x18\x10 \x01(\x08\x12\x0e\n\x06secure\x18\x11 \x01(\x08\x12\x11\n\tdedicated\x18\x12 \x01(\x08\x12\x0f\n\x07version\x18\x13 \x01(\t\x12\x11\n\tsdr_popid\x18\x14 \x01(\x07\x12\x1b\n\x13sdr_location_string\x18\x15 \x01(\t\"\x95\x01\n\x1e\x43MsgGameServerPlayersQueryData\x12\x37\n\x07players\x18\x01 \x03(\x0b\x32&.CMsgGameServerPlayersQueryData.Player\x1a:\n\x06Player\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05score\x18\x02 \x01(\r\x12\x13\n\x0btime_played\x18\x03 \x01(\r\"v\n\x1c\x43MsgGameServerRulesQueryData\x12\x31\n\x05rules\x18\x01 \x03(\x0b\x32\".CMsgGameServerRulesQueryData.Rule\x1a#\n\x04Rule\x12\x0c\n\x04rule\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\xc2\x01\n%CGameServers_GameServerQuery_Response\x12/\n\tping_data\x18\x01 \x01(\x0b\x32\x1c.CMsgGameServerPingQueryData\x12\x35\n\x0cplayers_data\x18\x02 \x01(\x0b\x32\x1f.CMsgGameServerPlayersQueryData\x12\x31\n\nrules_data\x18\x03 \x01(\x0b\x32\x1d.CMsgGameServerRulesQueryData\"*\n(GameServerClient_QueryServerData_Request\"\xc6\x01\n)GameServerClient_QueryServerData_Response\x12/\n\tping_data\x18\x01 \x01(\x0b\x32\x1c.CMsgGameServerPingQueryData\x12\x35\n\x0cplayers_data\x18\x02 \x01(\x0b\x32\x1f.CMsgGameServerPlayersQueryData\x12\x31\n\nrules_data\x18\x03 \x01(\x0b\x32\x1d.CMsgGameServerRulesQueryData2\xbe\x05\n\x0bGameServers\x12\x8c\x01\n\rGetServerList\x12#.CGameServers_GetServerList_Request\x1a$.CGameServers_GetServerList_Response\"0\x82\xb5\x18,Gets a list of servers given a filter string\x12\xa4\x01\n\x15GetServerSteamIDsByIP\x12+.CGameServers_GetServerSteamIDsByIP_Request\x1a&.CGameServers_IPsWithSteamIDs_Response\"6\x82\xb5\x18\x32Gets a list of server SteamIDs given a list of IPs\x12\xad\x01\n\x15GetServerIPsBySteamID\x12+.CGameServers_GetServerIPsBySteamID_Request\x1a&.CGameServers_IPsWithSteamIDs_Response\"?\x82\xb5\x18;Gets a list of server IP addresses given a list of SteamIDs\x12\x90\x01\n\rQueryByFakeIP\x12#.CGameServers_QueryByFakeIP_Request\x1a&.CGameServers_GameServerQuery_Response\"2\x82\xb5\x18.Perform a query on a specific server by FakeIP\x1a\x36\x82\xb5\x18\x32\x41 service for searching and managing game servers.2\xe9\x01\n\x10GameServerClient\x12\x97\x01\n\x0fQueryServerData\x12).GameServerClient_QueryServerData_Request\x1a*.GameServerClient_QueryServerData_Response\"-\x82\xb5\x18)Steam is asking a gameserver for its data\x1a;\x82\xb5\x18\x33Service methods exposed by GameServer Steam clients\xc0\xb5\x18\x02\x42\x03\x90\x01\x01'
  ,
  dependencies=[steammessages__base__pb2.DESCRIPTOR,steammessages__unified__base__pb2.DESCRIPTOR,])



_CGAMESERVERS_QUERYBYFAKEIP_REQUEST_EQUERYTYPE = _descriptor.EnumDescriptor(
  name='EQueryType',
  full_name='CGameServers_QueryByFakeIP_Request.EQueryType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Query_Invalid', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='Query_Ping', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='Query_Players', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='Query_Rules', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1349,
  serialized_end=1432,
)
_sym_db.RegisterEnumDescriptor(_CGAMESERVERS_QUERYBYFAKEIP_REQUEST_EQUERYTYPE)


_CGAMESERVERS_GETSERVERLIST_REQUEST = _descriptor.Descriptor(
  name='CGameServers_GetServerList_Request',
  full_name='CGameServers_GetServerList_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='filter', full_name='CGameServers_GetServerList_Request.filter', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\202\265\030\024Query filter string.', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='limit', full_name='CGameServers_GetServerList_Request.limit', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=True, default_value=100,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\202\265\0307The maximum number of servers to return in the response', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=96,
  serialized_end=255,
)


_CGAMESERVERS_GETSERVERLIST_RESPONSE_SERVER = _descriptor.Descriptor(
  name='Server',
  full_name='CGameServers_GetServerList_Response.Server',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='addr', full_name='CGameServers_GetServerList_Response.Server.addr', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\202\265\030\036The server\'s IP and query port', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gameport', full_name='CGameServers_GetServerList_Response.Server.gameport', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='specport', full_name='CGameServers_GetServerList_Response.Server.specport', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='steamid', full_name='CGameServers_GetServerList_Response.Server.steamid', index=3,
      number=4, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='CGameServers_GetServerList_Response.Server.name', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='appid', full_name='CGameServers_GetServerList_Response.Server.appid', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gamedir', full_name='CGameServers_GetServerList_Response.Server.gamedir', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='version', full_name='CGameServers_GetServerList_Response.Server.version', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='product', full_name='CGameServers_GetServerList_Response.Server.product', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='region', full_name='CGameServers_GetServerList_Response.Server.region', index=9,
      number=10, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='players', full_name='CGameServers_GetServerList_Response.Server.players', index=10,
      number=11, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_players', full_name='CGameServers_GetServerList_Response.Server.max_players', index=11,
      number=12, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bots', full_name='CGameServers_GetServerList_Response.Server.bots', index=12,
      number=13, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='map', full_name='CGameServers_GetServerList_Response.Server.map', index=13,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='secure', full_name='CGameServers_GetServerList_Response.Server.secure', index=14,
      number=15, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dedicated', full_name='CGameServers_GetServerList_Response.Server.dedicated', index=15,
      number=16, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='os', full_name='CGameServers_GetServerList_Response.Server.os', index=16,
      number=17, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gametype', full_name='CGameServers_GetServerList_Response.Server.gametype', index=17,
      number=18, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=401,
  serialized_end=738,
)

_CGAMESERVERS_GETSERVERLIST_RESPONSE = _descriptor.Descriptor(
  name='CGameServers_GetServerList_Response',
  full_name='CGameServers_GetServerList_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='servers', full_name='CGameServers_GetServerList_Response.servers', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\202\265\030#List of servers matching the filter', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_CGAMESERVERS_GETSERVERLIST_RESPONSE_SERVER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=258,
  serialized_end=738,
)


_CGAMESERVERS_GETSERVERSTEAMIDSBYIP_REQUEST = _descriptor.Descriptor(
  name='CGameServers_GetServerSteamIDsByIP_Request',
  full_name='CGameServers_GetServerSteamIDsByIP_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='server_ips', full_name='CGameServers_GetServerSteamIDsByIP_Request.server_ips', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=740,
  serialized_end=804,
)


_CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE_SERVER = _descriptor.Descriptor(
  name='Server',
  full_name='CGameServers_IPsWithSteamIDs_Response.Server',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='addr', full_name='CGameServers_IPsWithSteamIDs_Response.Server.addr', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='steamid', full_name='CGameServers_IPsWithSteamIDs_Response.Server.steamid', index=1,
      number=2, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=912,
  serialized_end=951,
)

_CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE = _descriptor.Descriptor(
  name='CGameServers_IPsWithSteamIDs_Response',
  full_name='CGameServers_IPsWithSteamIDs_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='servers', full_name='CGameServers_IPsWithSteamIDs_Response.servers', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE_SERVER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=807,
  serialized_end=951,
)


_CGAMESERVERS_GETSERVERIPSBYSTEAMID_REQUEST = _descriptor.Descriptor(
  name='CGameServers_GetServerIPsBySteamID_Request',
  full_name='CGameServers_GetServerIPsBySteamID_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='server_steamids', full_name='CGameServers_GetServerIPsBySteamID_Request.server_steamids', index=0,
      number=1, type=6, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=953,
  serialized_end=1022,
)


_CGAMESERVERS_QUERYBYFAKEIP_REQUEST = _descriptor.Descriptor(
  name='CGameServers_QueryByFakeIP_Request',
  full_name='CGameServers_QueryByFakeIP_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='fake_ip', full_name='CGameServers_QueryByFakeIP_Request.fake_ip', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\202\265\030\032FakeIP of server to query.', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fake_port', full_name='CGameServers_QueryByFakeIP_Request.fake_port', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\202\265\030\035Fake port of server to query.', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='app_id', full_name='CGameServers_QueryByFakeIP_Request.app_id', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\202\265\0305AppID to use.  Each AppID has its own FakeIP address.', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='query_type', full_name='CGameServers_QueryByFakeIP_Request.query_type', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\202\265\030\023What type of query?', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CGAMESERVERS_QUERYBYFAKEIP_REQUEST_EQUERYTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1025,
  serialized_end=1432,
)


_CMSGGAMESERVERPINGQUERYDATA = _descriptor.Descriptor(
  name='CMsgGameServerPingQueryData',
  full_name='CMsgGameServerPingQueryData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='server_ip', full_name='CMsgGameServerPingQueryData.server_ip', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='query_port', full_name='CMsgGameServerPingQueryData.query_port', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='game_port', full_name='CMsgGameServerPingQueryData.game_port', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='spectator_port', full_name='CMsgGameServerPingQueryData.spectator_port', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='spectator_server_name', full_name='CMsgGameServerPingQueryData.spectator_server_name', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='server_name', full_name='CMsgGameServerPingQueryData.server_name', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='steamid', full_name='CMsgGameServerPingQueryData.steamid', index=6,
      number=7, type=6, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='app_id', full_name='CMsgGameServerPingQueryData.app_id', index=7,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gamedir', full_name='CMsgGameServerPingQueryData.gamedir', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='map', full_name='CMsgGameServerPingQueryData.map', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='game_description', full_name='CMsgGameServerPingQueryData.game_description', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gametype', full_name='CMsgGameServerPingQueryData.gametype', index=11,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_players', full_name='CMsgGameServerPingQueryData.num_players', index=12,
      number=13, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_players', full_name='CMsgGameServerPingQueryData.max_players', index=13,
      number=14, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_bots', full_name='CMsgGameServerPingQueryData.num_bots', index=14,
      number=15, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='password', full_name='CMsgGameServerPingQueryData.password', index=15,
      number=16, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='secure', full_name='CMsgGameServerPingQueryData.secure', index=16,
      number=17, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='dedicated', full_name='CMsgGameServerPingQueryData.dedicated', index=17,
      number=18, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='version', full_name='CMsgGameServerPingQueryData.version', index=18,
      number=19, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sdr_popid', full_name='CMsgGameServerPingQueryData.sdr_popid', index=19,
      number=20, type=7, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sdr_location_string', full_name='CMsgGameServerPingQueryData.sdr_location_string', index=20,
      number=21, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1435,
  serialized_end=1899,
)


_CMSGGAMESERVERPLAYERSQUERYDATA_PLAYER = _descriptor.Descriptor(
  name='Player',
  full_name='CMsgGameServerPlayersQueryData.Player',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='CMsgGameServerPlayersQueryData.Player.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='score', full_name='CMsgGameServerPlayersQueryData.Player.score', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_played', full_name='CMsgGameServerPlayersQueryData.Player.time_played', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1993,
  serialized_end=2051,
)

_CMSGGAMESERVERPLAYERSQUERYDATA = _descriptor.Descriptor(
  name='CMsgGameServerPlayersQueryData',
  full_name='CMsgGameServerPlayersQueryData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='players', full_name='CMsgGameServerPlayersQueryData.players', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_CMSGGAMESERVERPLAYERSQUERYDATA_PLAYER, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1902,
  serialized_end=2051,
)


_CMSGGAMESERVERRULESQUERYDATA_RULE = _descriptor.Descriptor(
  name='Rule',
  full_name='CMsgGameServerRulesQueryData.Rule',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='rule', full_name='CMsgGameServerRulesQueryData.Rule.rule', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='CMsgGameServerRulesQueryData.Rule.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2136,
  serialized_end=2171,
)

_CMSGGAMESERVERRULESQUERYDATA = _descriptor.Descriptor(
  name='CMsgGameServerRulesQueryData',
  full_name='CMsgGameServerRulesQueryData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='rules', full_name='CMsgGameServerRulesQueryData.rules', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_CMSGGAMESERVERRULESQUERYDATA_RULE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2053,
  serialized_end=2171,
)


_CGAMESERVERS_GAMESERVERQUERY_RESPONSE = _descriptor.Descriptor(
  name='CGameServers_GameServerQuery_Response',
  full_name='CGameServers_GameServerQuery_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ping_data', full_name='CGameServers_GameServerQuery_Response.ping_data', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='players_data', full_name='CGameServers_GameServerQuery_Response.players_data', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rules_data', full_name='CGameServers_GameServerQuery_Response.rules_data', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2174,
  serialized_end=2368,
)


_GAMESERVERCLIENT_QUERYSERVERDATA_REQUEST = _descriptor.Descriptor(
  name='GameServerClient_QueryServerData_Request',
  full_name='GameServerClient_QueryServerData_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2370,
  serialized_end=2412,
)


_GAMESERVERCLIENT_QUERYSERVERDATA_RESPONSE = _descriptor.Descriptor(
  name='GameServerClient_QueryServerData_Response',
  full_name='GameServerClient_QueryServerData_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ping_data', full_name='GameServerClient_QueryServerData_Response.ping_data', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='players_data', full_name='GameServerClient_QueryServerData_Response.players_data', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rules_data', full_name='GameServerClient_QueryServerData_Response.rules_data', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2415,
  serialized_end=2613,
)

_CGAMESERVERS_GETSERVERLIST_RESPONSE_SERVER.containing_type = _CGAMESERVERS_GETSERVERLIST_RESPONSE
_CGAMESERVERS_GETSERVERLIST_RESPONSE.fields_by_name['servers'].message_type = _CGAMESERVERS_GETSERVERLIST_RESPONSE_SERVER
_CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE_SERVER.containing_type = _CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE
_CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE.fields_by_name['servers'].message_type = _CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE_SERVER
_CGAMESERVERS_QUERYBYFAKEIP_REQUEST.fields_by_name['query_type'].enum_type = _CGAMESERVERS_QUERYBYFAKEIP_REQUEST_EQUERYTYPE
_CGAMESERVERS_QUERYBYFAKEIP_REQUEST_EQUERYTYPE.containing_type = _CGAMESERVERS_QUERYBYFAKEIP_REQUEST
_CMSGGAMESERVERPINGQUERYDATA.fields_by_name['server_ip'].message_type = steammessages__base__pb2._CMSGIPADDRESS
_CMSGGAMESERVERPLAYERSQUERYDATA_PLAYER.containing_type = _CMSGGAMESERVERPLAYERSQUERYDATA
_CMSGGAMESERVERPLAYERSQUERYDATA.fields_by_name['players'].message_type = _CMSGGAMESERVERPLAYERSQUERYDATA_PLAYER
_CMSGGAMESERVERRULESQUERYDATA_RULE.containing_type = _CMSGGAMESERVERRULESQUERYDATA
_CMSGGAMESERVERRULESQUERYDATA.fields_by_name['rules'].message_type = _CMSGGAMESERVERRULESQUERYDATA_RULE
_CGAMESERVERS_GAMESERVERQUERY_RESPONSE.fields_by_name['ping_data'].message_type = _CMSGGAMESERVERPINGQUERYDATA
_CGAMESERVERS_GAMESERVERQUERY_RESPONSE.fields_by_name['players_data'].message_type = _CMSGGAMESERVERPLAYERSQUERYDATA
_CGAMESERVERS_GAMESERVERQUERY_RESPONSE.fields_by_name['rules_data'].message_type = _CMSGGAMESERVERRULESQUERYDATA
_GAMESERVERCLIENT_QUERYSERVERDATA_RESPONSE.fields_by_name['ping_data'].message_type = _CMSGGAMESERVERPINGQUERYDATA
_GAMESERVERCLIENT_QUERYSERVERDATA_RESPONSE.fields_by_name['players_data'].message_type = _CMSGGAMESERVERPLAYERSQUERYDATA
_GAMESERVERCLIENT_QUERYSERVERDATA_RESPONSE.fields_by_name['rules_data'].message_type = _CMSGGAMESERVERRULESQUERYDATA
DESCRIPTOR.message_types_by_name['CGameServers_GetServerList_Request'] = _CGAMESERVERS_GETSERVERLIST_REQUEST
DESCRIPTOR.message_types_by_name['CGameServers_GetServerList_Response'] = _CGAMESERVERS_GETSERVERLIST_RESPONSE
DESCRIPTOR.message_types_by_name['CGameServers_GetServerSteamIDsByIP_Request'] = _CGAMESERVERS_GETSERVERSTEAMIDSBYIP_REQUEST
DESCRIPTOR.message_types_by_name['CGameServers_IPsWithSteamIDs_Response'] = _CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE
DESCRIPTOR.message_types_by_name['CGameServers_GetServerIPsBySteamID_Request'] = _CGAMESERVERS_GETSERVERIPSBYSTEAMID_REQUEST
DESCRIPTOR.message_types_by_name['CGameServers_QueryByFakeIP_Request'] = _CGAMESERVERS_QUERYBYFAKEIP_REQUEST
DESCRIPTOR.message_types_by_name['CMsgGameServerPingQueryData'] = _CMSGGAMESERVERPINGQUERYDATA
DESCRIPTOR.message_types_by_name['CMsgGameServerPlayersQueryData'] = _CMSGGAMESERVERPLAYERSQUERYDATA
DESCRIPTOR.message_types_by_name['CMsgGameServerRulesQueryData'] = _CMSGGAMESERVERRULESQUERYDATA
DESCRIPTOR.message_types_by_name['CGameServers_GameServerQuery_Response'] = _CGAMESERVERS_GAMESERVERQUERY_RESPONSE
DESCRIPTOR.message_types_by_name['GameServerClient_QueryServerData_Request'] = _GAMESERVERCLIENT_QUERYSERVERDATA_REQUEST
DESCRIPTOR.message_types_by_name['GameServerClient_QueryServerData_Response'] = _GAMESERVERCLIENT_QUERYSERVERDATA_RESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CGameServers_GetServerList_Request = _reflection.GeneratedProtocolMessageType('CGameServers_GetServerList_Request', (_message.Message,), {
  'DESCRIPTOR' : _CGAMESERVERS_GETSERVERLIST_REQUEST,
  '__module__' : 'steammessages_gameservers_pb2'
  # @@protoc_insertion_point(class_scope:CGameServers_GetServerList_Request)
  })
_sym_db.RegisterMessage(CGameServers_GetServerList_Request)

CGameServers_GetServerList_Response = _reflection.GeneratedProtocolMessageType('CGameServers_GetServerList_Response', (_message.Message,), {

  'Server' : _reflection.GeneratedProtocolMessageType('Server', (_message.Message,), {
    'DESCRIPTOR' : _CGAMESERVERS_GETSERVERLIST_RESPONSE_SERVER,
    '__module__' : 'steammessages_gameservers_pb2'
    # @@protoc_insertion_point(class_scope:CGameServers_GetServerList_Response.Server)
    })
  ,
  'DESCRIPTOR' : _CGAMESERVERS_GETSERVERLIST_RESPONSE,
  '__module__' : 'steammessages_gameservers_pb2'
  # @@protoc_insertion_point(class_scope:CGameServers_GetServerList_Response)
  })
_sym_db.RegisterMessage(CGameServers_GetServerList_Response)
_sym_db.RegisterMessage(CGameServers_GetServerList_Response.Server)

CGameServers_GetServerSteamIDsByIP_Request = _reflection.GeneratedProtocolMessageType('CGameServers_GetServerSteamIDsByIP_Request', (_message.Message,), {
  'DESCRIPTOR' : _CGAMESERVERS_GETSERVERSTEAMIDSBYIP_REQUEST,
  '__module__' : 'steammessages_gameservers_pb2'
  # @@protoc_insertion_point(class_scope:CGameServers_GetServerSteamIDsByIP_Request)
  })
_sym_db.RegisterMessage(CGameServers_GetServerSteamIDsByIP_Request)

CGameServers_IPsWithSteamIDs_Response = _reflection.GeneratedProtocolMessageType('CGameServers_IPsWithSteamIDs_Response', (_message.Message,), {

  'Server' : _reflection.GeneratedProtocolMessageType('Server', (_message.Message,), {
    'DESCRIPTOR' : _CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE_SERVER,
    '__module__' : 'steammessages_gameservers_pb2'
    # @@protoc_insertion_point(class_scope:CGameServers_IPsWithSteamIDs_Response.Server)
    })
  ,
  'DESCRIPTOR' : _CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE,
  '__module__' : 'steammessages_gameservers_pb2'
  # @@protoc_insertion_point(class_scope:CGameServers_IPsWithSteamIDs_Response)
  })
_sym_db.RegisterMessage(CGameServers_IPsWithSteamIDs_Response)
_sym_db.RegisterMessage(CGameServers_IPsWithSteamIDs_Response.Server)

CGameServers_GetServerIPsBySteamID_Request = _reflection.GeneratedProtocolMessageType('CGameServers_GetServerIPsBySteamID_Request', (_message.Message,), {
  'DESCRIPTOR' : _CGAMESERVERS_GETSERVERIPSBYSTEAMID_REQUEST,
  '__module__' : 'steammessages_gameservers_pb2'
  # @@protoc_insertion_point(class_scope:CGameServers_GetServerIPsBySteamID_Request)
  })
_sym_db.RegisterMessage(CGameServers_GetServerIPsBySteamID_Request)

CGameServers_QueryByFakeIP_Request = _reflection.GeneratedProtocolMessageType('CGameServers_QueryByFakeIP_Request', (_message.Message,), {
  'DESCRIPTOR' : _CGAMESERVERS_QUERYBYFAKEIP_REQUEST,
  '__module__' : 'steammessages_gameservers_pb2'
  # @@protoc_insertion_point(class_scope:CGameServers_QueryByFakeIP_Request)
  })
_sym_db.RegisterMessage(CGameServers_QueryByFakeIP_Request)

CMsgGameServerPingQueryData = _reflection.GeneratedProtocolMessageType('CMsgGameServerPingQueryData', (_message.Message,), {
  'DESCRIPTOR' : _CMSGGAMESERVERPINGQUERYDATA,
  '__module__' : 'steammessages_gameservers_pb2'
  # @@protoc_insertion_point(class_scope:CMsgGameServerPingQueryData)
  })
_sym_db.RegisterMessage(CMsgGameServerPingQueryData)

CMsgGameServerPlayersQueryData = _reflection.GeneratedProtocolMessageType('CMsgGameServerPlayersQueryData', (_message.Message,), {

  'Player' : _reflection.GeneratedProtocolMessageType('Player', (_message.Message,), {
    'DESCRIPTOR' : _CMSGGAMESERVERPLAYERSQUERYDATA_PLAYER,
    '__module__' : 'steammessages_gameservers_pb2'
    # @@protoc_insertion_point(class_scope:CMsgGameServerPlayersQueryData.Player)
    })
  ,
  'DESCRIPTOR' : _CMSGGAMESERVERPLAYERSQUERYDATA,
  '__module__' : 'steammessages_gameservers_pb2'
  # @@protoc_insertion_point(class_scope:CMsgGameServerPlayersQueryData)
  })
_sym_db.RegisterMessage(CMsgGameServerPlayersQueryData)
_sym_db.RegisterMessage(CMsgGameServerPlayersQueryData.Player)

CMsgGameServerRulesQueryData = _reflection.GeneratedProtocolMessageType('CMsgGameServerRulesQueryData', (_message.Message,), {

  'Rule' : _reflection.GeneratedProtocolMessageType('Rule', (_message.Message,), {
    'DESCRIPTOR' : _CMSGGAMESERVERRULESQUERYDATA_RULE,
    '__module__' : 'steammessages_gameservers_pb2'
    # @@protoc_insertion_point(class_scope:CMsgGameServerRulesQueryData.Rule)
    })
  ,
  'DESCRIPTOR' : _CMSGGAMESERVERRULESQUERYDATA,
  '__module__' : 'steammessages_gameservers_pb2'
  # @@protoc_insertion_point(class_scope:CMsgGameServerRulesQueryData)
  })
_sym_db.RegisterMessage(CMsgGameServerRulesQueryData)
_sym_db.RegisterMessage(CMsgGameServerRulesQueryData.Rule)

CGameServers_GameServerQuery_Response = _reflection.GeneratedProtocolMessageType('CGameServers_GameServerQuery_Response', (_message.Message,), {
  'DESCRIPTOR' : _CGAMESERVERS_GAMESERVERQUERY_RESPONSE,
  '__module__' : 'steammessages_gameservers_pb2'
  # @@protoc_insertion_point(class_scope:CGameServers_GameServerQuery_Response)
  })
_sym_db.RegisterMessage(CGameServers_GameServerQuery_Response)

GameServerClient_QueryServerData_Request = _reflection.GeneratedProtocolMessageType('GameServerClient_QueryServerData_Request', (_message.Message,), {
  'DESCRIPTOR' : _GAMESERVERCLIENT_QUERYSERVERDATA_REQUEST,
  '__module__' : 'steammessages_gameservers_pb2'
  # @@protoc_insertion_point(class_scope:GameServerClient_QueryServerData_Request)
  })
_sym_db.RegisterMessage(GameServerClient_QueryServerData_Request)

GameServerClient_QueryServerData_Response = _reflection.GeneratedProtocolMessageType('GameServerClient_QueryServerData_Response', (_message.Message,), {
  'DESCRIPTOR' : _GAMESERVERCLIENT_QUERYSERVERDATA_RESPONSE,
  '__module__' : 'steammessages_gameservers_pb2'
  # @@protoc_insertion_point(class_scope:GameServerClient_QueryServerData_Response)
  })
_sym_db.RegisterMessage(GameServerClient_QueryServerData_Response)


DESCRIPTOR._options = None
_CGAMESERVERS_GETSERVERLIST_REQUEST.fields_by_name['filter']._options = None
_CGAMESERVERS_GETSERVERLIST_REQUEST.fields_by_name['limit']._options = None
_CGAMESERVERS_GETSERVERLIST_RESPONSE_SERVER.fields_by_name['addr']._options = None
_CGAMESERVERS_GETSERVERLIST_RESPONSE.fields_by_name['servers']._options = None
_CGAMESERVERS_QUERYBYFAKEIP_REQUEST.fields_by_name['fake_ip']._options = None
_CGAMESERVERS_QUERYBYFAKEIP_REQUEST.fields_by_name['fake_port']._options = None
_CGAMESERVERS_QUERYBYFAKEIP_REQUEST.fields_by_name['app_id']._options = None
_CGAMESERVERS_QUERYBYFAKEIP_REQUEST.fields_by_name['query_type']._options = None

_GAMESERVERS = _descriptor.ServiceDescriptor(
  name='GameServers',
  full_name='GameServers',
  file=DESCRIPTOR,
  index=0,
  serialized_options=b'\202\265\0302A service for searching and managing game servers.',
  create_key=_descriptor._internal_create_key,
  serialized_start=2616,
  serialized_end=3318,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetServerList',
    full_name='GameServers.GetServerList',
    index=0,
    containing_service=None,
    input_type=_CGAMESERVERS_GETSERVERLIST_REQUEST,
    output_type=_CGAMESERVERS_GETSERVERLIST_RESPONSE,
    serialized_options=b'\202\265\030,Gets a list of servers given a filter string',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetServerSteamIDsByIP',
    full_name='GameServers.GetServerSteamIDsByIP',
    index=1,
    containing_service=None,
    input_type=_CGAMESERVERS_GETSERVERSTEAMIDSBYIP_REQUEST,
    output_type=_CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE,
    serialized_options=b'\202\265\0302Gets a list of server SteamIDs given a list of IPs',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetServerIPsBySteamID',
    full_name='GameServers.GetServerIPsBySteamID',
    index=2,
    containing_service=None,
    input_type=_CGAMESERVERS_GETSERVERIPSBYSTEAMID_REQUEST,
    output_type=_CGAMESERVERS_IPSWITHSTEAMIDS_RESPONSE,
    serialized_options=b'\202\265\030;Gets a list of server IP addresses given a list of SteamIDs',
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='QueryByFakeIP',
    full_name='GameServers.QueryByFakeIP',
    index=3,
    containing_service=None,
    input_type=_CGAMESERVERS_QUERYBYFAKEIP_REQUEST,
    output_type=_CGAMESERVERS_GAMESERVERQUERY_RESPONSE,
    serialized_options=b'\202\265\030.Perform a query on a specific server by FakeIP',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_GAMESERVERS)

DESCRIPTOR.services_by_name['GameServers'] = _GAMESERVERS


_GAMESERVERCLIENT = _descriptor.ServiceDescriptor(
  name='GameServerClient',
  full_name='GameServerClient',
  file=DESCRIPTOR,
  index=1,
  serialized_options=b'\202\265\0303Service methods exposed by GameServer Steam clients\300\265\030\002',
  create_key=_descriptor._internal_create_key,
  serialized_start=3321,
  serialized_end=3554,
  methods=[
  _descriptor.MethodDescriptor(
    name='QueryServerData',
    full_name='GameServerClient.QueryServerData',
    index=0,
    containing_service=None,
    input_type=_GAMESERVERCLIENT_QUERYSERVERDATA_REQUEST,
    output_type=_GAMESERVERCLIENT_QUERYSERVERDATA_RESPONSE,
    serialized_options=b'\202\265\030)Steam is asking a gameserver for its data',
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_GAMESERVERCLIENT)

DESCRIPTOR.services_by_name['GameServerClient'] = _GAMESERVERCLIENT

GameServers = service_reflection.GeneratedServiceType('GameServers', (_service.Service,), dict(
  DESCRIPTOR = _GAMESERVERS,
  __module__ = 'steammessages_gameservers_pb2'
  ))

GameServers_Stub = service_reflection.GeneratedServiceStubType('GameServers_Stub', (GameServers,), dict(
  DESCRIPTOR = _GAMESERVERS,
  __module__ = 'steammessages_gameservers_pb2'
  ))


GameServerClient = service_reflection.GeneratedServiceType('GameServerClient', (_service.Service,), dict(
  DESCRIPTOR = _GAMESERVERCLIENT,
  __module__ = 'steammessages_gameservers_pb2'
  ))

GameServerClient_Stub = service_reflection.GeneratedServiceStubType('GameServerClient_Stub', (GameServerClient,), dict(
  DESCRIPTOR = _GAMESERVERCLIENT,
  __module__ = 'steammessages_gameservers_pb2'
  ))


# @@protoc_insertion_point(module_scope)
