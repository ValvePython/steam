# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from abc import (
    ABCMeta as abc___ABCMeta,
    abstractmethod as abc___abstractmethod,
)

from concurrent.futures import (
    Future as concurrent___futures___Future,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from google.protobuf.service import (
    RpcChannel as google___protobuf___service___RpcChannel,
    RpcController as google___protobuf___service___RpcController,
    Service as google___protobuf___service___Service,
)

from steammessages_unified_base_pb2 import (
    NoResponse as steammessages_unified_base_pb2___NoResponse,
)

from typing import (
    Callable as typing___Callable,
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class CSiteManagerClient_IncomingClient_Request(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    site_instanceid: builtin___int = ...
    client_steamid: builtin___int = ...
    client_local_ip: builtin___int = ...
    connection_key: builtin___bytes = ...

    def __init__(self,
        *,
        site_instanceid : typing___Optional[builtin___int] = None,
        client_steamid : typing___Optional[builtin___int] = None,
        client_local_ip : typing___Optional[builtin___int] = None,
        connection_key : typing___Optional[builtin___bytes] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"client_local_ip",b"client_local_ip",u"client_steamid",b"client_steamid",u"connection_key",b"connection_key",u"site_instanceid",b"site_instanceid"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"client_local_ip",b"client_local_ip",u"client_steamid",b"client_steamid",u"connection_key",b"connection_key",u"site_instanceid",b"site_instanceid"]) -> None: ...
type___CSiteManagerClient_IncomingClient_Request = CSiteManagerClient_IncomingClient_Request

class CSiteManagerClient_IncomingClient_Response(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
type___CSiteManagerClient_IncomingClient_Response = CSiteManagerClient_IncomingClient_Response

class CSiteLicense_ClientSeatCheckout_Notification(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    appid: builtin___int = ...
    eresult: builtin___int = ...

    def __init__(self,
        *,
        appid : typing___Optional[builtin___int] = None,
        eresult : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"appid",b"appid",u"eresult",b"eresult"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"appid",b"appid",u"eresult",b"eresult"]) -> None: ...
type___CSiteLicense_ClientSeatCheckout_Notification = CSiteLicense_ClientSeatCheckout_Notification

class CSiteManagerClient_TrackedPayments_Notification(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Payment(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        transid: builtin___int = ...
        steamid: builtin___int = ...
        amount: builtin___int = ...
        ecurrency: builtin___int = ...
        time_created: builtin___int = ...
        purchase_status: builtin___int = ...
        machine_name: typing___Text = ...
        persona_name: typing___Text = ...
        profile_url: typing___Text = ...
        avatar_url: typing___Text = ...

        def __init__(self,
            *,
            transid : typing___Optional[builtin___int] = None,
            steamid : typing___Optional[builtin___int] = None,
            amount : typing___Optional[builtin___int] = None,
            ecurrency : typing___Optional[builtin___int] = None,
            time_created : typing___Optional[builtin___int] = None,
            purchase_status : typing___Optional[builtin___int] = None,
            machine_name : typing___Optional[typing___Text] = None,
            persona_name : typing___Optional[typing___Text] = None,
            profile_url : typing___Optional[typing___Text] = None,
            avatar_url : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"avatar_url",b"avatar_url",u"ecurrency",b"ecurrency",u"machine_name",b"machine_name",u"persona_name",b"persona_name",u"profile_url",b"profile_url",u"purchase_status",b"purchase_status",u"steamid",b"steamid",u"time_created",b"time_created",u"transid",b"transid"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"avatar_url",b"avatar_url",u"ecurrency",b"ecurrency",u"machine_name",b"machine_name",u"persona_name",b"persona_name",u"profile_url",b"profile_url",u"purchase_status",b"purchase_status",u"steamid",b"steamid",u"time_created",b"time_created",u"transid",b"transid"]) -> None: ...
    type___Payment = Payment

    site_id: builtin___int = ...

    @property
    def payments(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___CSiteManagerClient_TrackedPayments_Notification.Payment]: ...

    def __init__(self,
        *,
        site_id : typing___Optional[builtin___int] = None,
        payments : typing___Optional[typing___Iterable[type___CSiteManagerClient_TrackedPayments_Notification.Payment]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"site_id",b"site_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"payments",b"payments",u"site_id",b"site_id"]) -> None: ...
type___CSiteManagerClient_TrackedPayments_Notification = CSiteManagerClient_TrackedPayments_Notification

class CSiteLicense_InitiateAssociation_Request(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    site_steamid: builtin___int = ...
    site_instanceid: builtin___int = ...
    client_local_ip: builtin___int = ...

    def __init__(self,
        *,
        site_steamid : typing___Optional[builtin___int] = None,
        site_instanceid : typing___Optional[builtin___int] = None,
        client_local_ip : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"client_local_ip",b"client_local_ip",u"site_instanceid",b"site_instanceid",u"site_steamid",b"site_steamid"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"client_local_ip",b"client_local_ip",u"site_instanceid",b"site_instanceid",u"site_steamid",b"site_steamid"]) -> None: ...
type___CSiteLicense_InitiateAssociation_Request = CSiteLicense_InitiateAssociation_Request

class CSiteLicense_InitiateAssociation_Response(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    connection_key: builtin___bytes = ...

    def __init__(self,
        *,
        connection_key : typing___Optional[builtin___bytes] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"connection_key",b"connection_key"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"connection_key",b"connection_key"]) -> None: ...
type___CSiteLicense_InitiateAssociation_Response = CSiteLicense_InitiateAssociation_Response

class CSiteLicense_LCSAuthenticate_Request(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    instanceid: builtin___int = ...

    def __init__(self,
        *,
        instanceid : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"instanceid",b"instanceid"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"instanceid",b"instanceid"]) -> None: ...
type___CSiteLicense_LCSAuthenticate_Request = CSiteLicense_LCSAuthenticate_Request

class CSiteLicense_LCSAuthenticate_Response(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    site_id: builtin___int = ...
    site_name: typing___Text = ...
    new_session: builtin___bool = ...
    no_site_licenses: builtin___bool = ...

    def __init__(self,
        *,
        site_id : typing___Optional[builtin___int] = None,
        site_name : typing___Optional[typing___Text] = None,
        new_session : typing___Optional[builtin___bool] = None,
        no_site_licenses : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"new_session",b"new_session",u"no_site_licenses",b"no_site_licenses",u"site_id",b"site_id",u"site_name",b"site_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"new_session",b"new_session",u"no_site_licenses",b"no_site_licenses",u"site_id",b"site_id",u"site_name",b"site_name"]) -> None: ...
type___CSiteLicense_LCSAuthenticate_Response = CSiteLicense_LCSAuthenticate_Response

class CSiteLicense_LCSAssociateUser_Request(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    steamid: builtin___int = ...
    local_ip: builtin___int = ...
    instanceid: builtin___int = ...
    machine_name: typing___Text = ...

    def __init__(self,
        *,
        steamid : typing___Optional[builtin___int] = None,
        local_ip : typing___Optional[builtin___int] = None,
        instanceid : typing___Optional[builtin___int] = None,
        machine_name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"instanceid",b"instanceid",u"local_ip",b"local_ip",u"machine_name",b"machine_name",u"steamid",b"steamid"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"instanceid",b"instanceid",u"local_ip",b"local_ip",u"machine_name",b"machine_name",u"steamid",b"steamid"]) -> None: ...
type___CSiteLicense_LCSAssociateUser_Request = CSiteLicense_LCSAssociateUser_Request

class CSiteLicense_LCSAssociateUser_Response(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
type___CSiteLicense_LCSAssociateUser_Response = CSiteLicense_LCSAssociateUser_Response

class CSiteLicense_ClientSeatCheckout_Request(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    steamid: builtin___int = ...
    instanceid: builtin___int = ...
    appid: builtin___int = ...

    def __init__(self,
        *,
        steamid : typing___Optional[builtin___int] = None,
        instanceid : typing___Optional[builtin___int] = None,
        appid : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"appid",b"appid",u"instanceid",b"instanceid",u"steamid",b"steamid"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"appid",b"appid",u"instanceid",b"instanceid",u"steamid",b"steamid"]) -> None: ...
type___CSiteLicense_ClientSeatCheckout_Request = CSiteLicense_ClientSeatCheckout_Request

class CSiteLicense_ClientSeatCheckout_Response(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
type___CSiteLicense_ClientSeatCheckout_Response = CSiteLicense_ClientSeatCheckout_Response

class CSiteLicense_ClientGetAvailableSeats_Request(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    steamid: builtin___int = ...
    instanceid: builtin___int = ...
    appid: builtin___int = ...

    def __init__(self,
        *,
        steamid : typing___Optional[builtin___int] = None,
        instanceid : typing___Optional[builtin___int] = None,
        appid : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"appid",b"appid",u"instanceid",b"instanceid",u"steamid",b"steamid"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"appid",b"appid",u"instanceid",b"instanceid",u"steamid",b"steamid"]) -> None: ...
type___CSiteLicense_ClientGetAvailableSeats_Request = CSiteLicense_ClientGetAvailableSeats_Request

class CSiteLicense_ClientGetAvailableSeats_Response(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    available_seats: builtin___int = ...

    def __init__(self,
        *,
        available_seats : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"available_seats",b"available_seats"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"available_seats",b"available_seats"]) -> None: ...
type___CSiteLicense_ClientGetAvailableSeats_Response = CSiteLicense_ClientGetAvailableSeats_Response

class SiteManagerClient(google___protobuf___service___Service, metaclass=abc___ABCMeta):
    @abc___abstractmethod
    def IncomingClient(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteManagerClient_IncomingClient_Request,
        done: typing___Optional[typing___Callable[[type___CSiteManagerClient_IncomingClient_Response], None]],
    ) -> concurrent___futures___Future[type___CSiteManagerClient_IncomingClient_Response]: ...
    @abc___abstractmethod
    def ClientSeatCheckoutNotification(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteLicense_ClientSeatCheckout_Notification,
        done: typing___Optional[typing___Callable[[steammessages_unified_base_pb2___NoResponse], None]],
    ) -> concurrent___futures___Future[steammessages_unified_base_pb2___NoResponse]: ...
    @abc___abstractmethod
    def TrackedPaymentsNotification(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteManagerClient_TrackedPayments_Notification,
        done: typing___Optional[typing___Callable[[steammessages_unified_base_pb2___NoResponse], None]],
    ) -> concurrent___futures___Future[steammessages_unified_base_pb2___NoResponse]: ...
class SiteManagerClient_Stub(SiteManagerClient):
    def __init__(self, rpc_channel: google___protobuf___service___RpcChannel) -> None: ...
    def IncomingClient(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteManagerClient_IncomingClient_Request,
        done: typing___Optional[typing___Callable[[type___CSiteManagerClient_IncomingClient_Response], None]],
    ) -> concurrent___futures___Future[type___CSiteManagerClient_IncomingClient_Response]: ...
    def ClientSeatCheckoutNotification(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteLicense_ClientSeatCheckout_Notification,
        done: typing___Optional[typing___Callable[[steammessages_unified_base_pb2___NoResponse], None]],
    ) -> concurrent___futures___Future[steammessages_unified_base_pb2___NoResponse]: ...
    def TrackedPaymentsNotification(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteManagerClient_TrackedPayments_Notification,
        done: typing___Optional[typing___Callable[[steammessages_unified_base_pb2___NoResponse], None]],
    ) -> concurrent___futures___Future[steammessages_unified_base_pb2___NoResponse]: ...
class SiteLicense(google___protobuf___service___Service, metaclass=abc___ABCMeta):
    @abc___abstractmethod
    def InitiateAssociation(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteLicense_InitiateAssociation_Request,
        done: typing___Optional[typing___Callable[[type___CSiteLicense_InitiateAssociation_Response], None]],
    ) -> concurrent___futures___Future[type___CSiteLicense_InitiateAssociation_Response]: ...
    @abc___abstractmethod
    def LCSAuthenticate(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteLicense_LCSAuthenticate_Request,
        done: typing___Optional[typing___Callable[[type___CSiteLicense_LCSAuthenticate_Response], None]],
    ) -> concurrent___futures___Future[type___CSiteLicense_LCSAuthenticate_Response]: ...
    @abc___abstractmethod
    def LCSAssociateUser(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteLicense_LCSAssociateUser_Request,
        done: typing___Optional[typing___Callable[[type___CSiteLicense_LCSAssociateUser_Response], None]],
    ) -> concurrent___futures___Future[type___CSiteLicense_LCSAssociateUser_Response]: ...
    @abc___abstractmethod
    def ClientSeatCheckout(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteLicense_ClientSeatCheckout_Request,
        done: typing___Optional[typing___Callable[[type___CSiteLicense_ClientSeatCheckout_Response], None]],
    ) -> concurrent___futures___Future[type___CSiteLicense_ClientSeatCheckout_Response]: ...
    @abc___abstractmethod
    def ClientGetAvailableSeats(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteLicense_ClientGetAvailableSeats_Request,
        done: typing___Optional[typing___Callable[[type___CSiteLicense_ClientGetAvailableSeats_Response], None]],
    ) -> concurrent___futures___Future[type___CSiteLicense_ClientGetAvailableSeats_Response]: ...
class SiteLicense_Stub(SiteLicense):
    def __init__(self, rpc_channel: google___protobuf___service___RpcChannel) -> None: ...
    def InitiateAssociation(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteLicense_InitiateAssociation_Request,
        done: typing___Optional[typing___Callable[[type___CSiteLicense_InitiateAssociation_Response], None]],
    ) -> concurrent___futures___Future[type___CSiteLicense_InitiateAssociation_Response]: ...
    def LCSAuthenticate(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteLicense_LCSAuthenticate_Request,
        done: typing___Optional[typing___Callable[[type___CSiteLicense_LCSAuthenticate_Response], None]],
    ) -> concurrent___futures___Future[type___CSiteLicense_LCSAuthenticate_Response]: ...
    def LCSAssociateUser(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteLicense_LCSAssociateUser_Request,
        done: typing___Optional[typing___Callable[[type___CSiteLicense_LCSAssociateUser_Response], None]],
    ) -> concurrent___futures___Future[type___CSiteLicense_LCSAssociateUser_Response]: ...
    def ClientSeatCheckout(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteLicense_ClientSeatCheckout_Request,
        done: typing___Optional[typing___Callable[[type___CSiteLicense_ClientSeatCheckout_Response], None]],
    ) -> concurrent___futures___Future[type___CSiteLicense_ClientSeatCheckout_Response]: ...
    def ClientGetAvailableSeats(self,
        rpc_controller: google___protobuf___service___RpcController,
        request: type___CSiteLicense_ClientGetAvailableSeats_Request,
        done: typing___Optional[typing___Callable[[type___CSiteLicense_ClientGetAvailableSeats_Response], None]],
    ) -> concurrent___futures___Future[type___CSiteLicense_ClientGetAvailableSeats_Response]: ...